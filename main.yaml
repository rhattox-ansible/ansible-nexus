---
- name: Install Sonatype Nexus Repository Manager
  hosts: localhost
  become: true

  vars:
    corretto_version: "8.402.08.1"
    corretto_install_dir: "/opt/amazon-corretto-{{ corretto_version }}"
    nexus_version: "3.62.0-01"
    nexus_home: "/opt/nexus"
    nexus_url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-unix.tar.gz"
    nexus_systemd_service_name: nexus

  tasks:
    - name: Retrieve system environment
      block:
        - name: Get the username running the deploy
          become: false
          register: host_username
          changed_when: host_username.rc != 0
          ansible.builtin.command: whoami

        - name: Display Command Output
          ansible.builtin.debug:
            var: host_username.stdout

    - name: Create Nexus home directory
      ansible.builtin.file:
        path: "{{ nexus_home }}"
        state: directory
        owner: "{{ host_username.stdout }}"
        group: "{{ host_username.stdout }}"
        mode: "0755"

    - name: Download Nexus distribution
      ansible.builtin.get_url:
        url: "{{ nexus_url }}"
        dest: "/tmp/nexus-{{ nexus_version }}.tar.gz"
        mode: "0777"

    - name: Extract Nexus distribution
      ansible.builtin.unarchive:
        src: "/tmp/nexus-{{ nexus_version }}.tar.gz"
        dest: "{{ nexus_home }}"
        remote_src: true
        creates: "{{ nexus_home }}/bin/nexus"

    - name: Configure Nexus With Amazon Corretto
      ansible.builtin.copy:
        content: |
          {{ corretto_install_dir }}/amazon-corretto-{{ corretto_version }}-linux-x64
        dest: "/opt/nexus/nexus-3.62.0-01/.install4j/pref_jre.cfg"
        owner: "{{ host_username.stdout }}"
        group: "{{ host_username.stdout }}"
        mode: "0644"

    - name: Link Binary
      ansible.builtin.file:
        src: "{{ nexus_home }}/nexus-3.62.0-01/bin/nexus"
        dest: "/etc/init.d/nexus"
        state: link

    - name: Configure Nexus as a Systemd service
      ansible.builtin.copy:
        content: |
          [Unit]
          Description=nexus service
          After=network.target

          [Service]
          Type=forking
          LimitNOFILE=65536
          ExecStart=/etc/init.d/nexus start
          ExecStop=/etc/init.d/nexus stop
          User={{ host_username.stdout }}
          Restart=on-abort
          TimeoutSec=600

          [Install]
          WantedBy=multi-user.target

        dest: "/etc/systemd/system/{{ nexus_systemd_service_name }}.service"
        owner: "{{ host_username.stdout }}"
        group: "{{ host_username.stdout }}"
        mode: "0644"

    - name: Reload Systemd to recognize the new service
      ansible.builtin.systemd:
        daemon_reload: true

    # - name: Enable and start Nexus service
    #   ansible.builtin.service:
    #     name: "{{ nexus_systemd_service_name }}"
    #     enabled: true
    #     state: started

    - name: Configure Nexus Configuration File
      ansible.builtin.copy:
        content: |
          # Jetty section
          # application-port=8081
          # application-host=0.0.0.0
          # nexus-args=${jetty.etc}/jetty.xml,${jetty.etc}/jetty-http.xml,${jetty.etc}/jetty-requestlog.xml
          nexus-context-path=/nexus

          # Nexus section
          # nexus-edition=nexus-pro-edition
          # nexus-features=\
          #  nexus-pro-feature

          # nexus.hazelcast.discovery.isEnabled=true

        dest: "{{ nexus_home }}/sonatype-work/nexus3/etc/nexus.properties"
        owner: "{{ host_username.stdout }}"
        group: "{{ host_username.stdout }}"
        mode: "0644"
